set scrolloff=10
" Do incremental searching.
set incsearch
" set up to sync vim clipboard with os clipboard
set clipboard+=unnamed
" set relative number
set number relativenumber
"" Which-key
set which-key
set notimeout
"set timeoutlen=5000
"let g:WhichKey_ShowVimActions = 'true'
let g:WhichKey_ShowTypedSequence = 'true'

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

let mapleader=" "

" Split section
map <leader>sv <Action>(SplitVertically)
map <leader>sh <Action>(SplitHorizontally)
map <leader>sx <Action>(Unsplit)

" Go to left split
map <C-h> <C-w>h
" Go to right split
map <C-l> <C-w>l
" Go to top split
map <C-k> <C-w>k
" Go to bottom split
map <C-j> <C-w>j
" Search File
map <leader><leader> <Action>(GotoFile)
" Find Usage
map <leader>us <Action>(FindUsages)
" Find In Files
map <leader>/ <Action>(FindInPath)
" Replace In Files
map <leader>sr <Action>(ReplaceInPath)
" Refactor Rename
map <leader>rr <Action>(RenameElement)
" Go to Next error
map ]e <Action>(GotoNextError)
" Go to Previous error
map [e <Action>(GotoPreviousError)
" Jump to last change
map g; <Action>(JumpToLastChange)
" Jump to next change
map g, <Action>(JumpToNextChange)
"" Map <leader>d to start debug
map <leader>d <Action>(Debug)
let g:WhichKeyDesc_toggle_line_breakpoint = 'Toggle Line Breakpoint'
map <leader>db <Action>(ToggleLineBreakpoint)
let g:WhichKeyDesc_generate = '<leader>ca Show Generate Popup'
map <leader>ca <Action>(Generate)
let g:WhichKeyDesc_debug = '<leader>da Debug'
map <leader>da <Action>(DebugClass)
" Tab navigation
map ]b  :tabnext<CR>
map [b :tabprevious<CR>

" Distraction Free Mode
map <leader>e <Action>(ToggleDistractionFreeMode)
" Show Line Numbers
map <leader>sl <Action>(ShowLineNumbers)

Plug "tpope/vim-surround"

" Harpoon
nmap <leader>hm <action>(HarpoonerToggleQuickMenu)

nmap <leader>aa <action>(HarpoonerAddFile)
nmap <leader>ad <action>(HarpoonerRemoveFile)
nmap <leader>a1 <action>(HarpoonerOpenFile0)
nmap <leader>a2 <action>(HarpoonerOpenFile1)
nmap <leader>a3 <action>(HarpoonerOpenFile2)
nmap <leader>ada <action>(HarpoonerClearMenu)
